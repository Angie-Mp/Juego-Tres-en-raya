{"version":3,"sources":["src/index.js"],"names":["playerTurn","document","getElementById","gameContainer","gameReset","gameState","rightMoves","winner","currentPlayer","finished","turnGame","gameActive","main","handleStatusDisplay","listeners","addEventListener","positionClick","resetPositionClick","clickedCellEvent","clickedCell","target","classList","contains","clickedCellIndex","Array","from","parentNode","children","indexOf","handleCellPlayed","handleResultValidation","message","innerHTML","restartGameState","querySelectorAll","forEach","cell","roundWon","i","length","winCondition","position1","position2","position3","roundDraw","includes","handlePlayerChange"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const playerTurn = document.getElementById(\"playerTurn\");\nconst gameContainer = document.getElementById(\"gameContainer\")\nconst gameReset = document.getElementById(\"gameReset\")\n\ngameState = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\nrightMoves = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ],\n\n  winner = () => `El jugador ${currentPlayer} ha ganado!`,\n  finished = () => `El juego ha terminado en empate!`,\n  turnGame = () => `Turno del jugador ${currentPlayer}`\n\nlet gameActive = true,\n  currentPlayer = \"O\"\n\nfunction main() {\n  handleStatusDisplay(turnGame())\n  listeners()\n}\nfunction listeners() {\n    gameContainer.addEventListener('click',positionClick);\n    gameReset.addEventListener('click',resetPositionClick);\n}\nfunction positionClick(clickedCellEvent ) {\n    const clickedCell = clickedCellEvent.target\n    if (clickedCell.classList.contains('game-cell')) {\n      const clickedCellIndex = Array.from(clickedCell.parentNode.children).indexOf(clickedCell)\n      if (gameState[clickedCellIndex] !== '' || !gameActive) {\n        return false\n      }\n      handleCellPlayed(clickedCell, clickedCellIndex)\n      handleResultValidation()\n    }\n  }\nfunction handleStatusDisplay(message) {\n    playerTurn.innerHTML = message\n}\nfunction resetPositionClick() {\n  gameActive = true\n  currentPlayer = \"X\"\n  restartGameState()\n  handleStatusDisplay(turnGame())\n  document.querySelectorAll('.game-cell').forEach(cell => cell.innerHTML = \"\")\n}\n\nfunction handleCellPlayed(clickedCell, clickedCellIndex) {\n    gameState[clickedCellIndex] = currentPlayer \n  clickedCell.innerHTML = currentPlayer \n}\n\nfunction handleResultValidation() {\n  let roundWon = false\n  for (let i = 0; i < rightMoves.length; i++) { \n    const winCondition = rightMoves[i]\n    let position1 = gameState[winCondition[0]],\n      position2 = gameState[winCondition[1]],\n      position3 = gameState[winCondition[2]] \n\n    if (position1 === '' || position2 === '' || position3 === '') {\n      continue; \n    }\n    if (position1 === position2 && position2 === position3) {\n      roundWon = true \n      break\n    }\n  }\n\n  if (roundWon) {\n    handleStatusDisplay(winner())\n    gameActive = false\n    return\n  }\n\n  let roundDraw = !gameState.includes(\"\") \n  if (roundDraw) {\n    handleStatusDisplay(finished())\n    gameActive = false\n    return\n  }\n  handlePlayerChange()\n}\n\nfunction handlePlayerChange() {\n  currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\"\n  handleStatusDisplay(turnGame())\n}\n\nfunction restartGameState() {\n  let i = gameState.length\n  while (i--) {\n    gameState[i] = ''\n  }\n}\nmain()"]}